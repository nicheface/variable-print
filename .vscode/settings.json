// Place your settings in this file to overwrite default and user settings.
{
    "files.exclude": {
        "out": false, // set this to true to hide the "out" folder with the compiled JS files
        "dist": false // set this to true to hide the "dist" folder with the compiled JS files
    },
    "search.exclude": {
        "out": true, // set this to false to include "out" folder in search results
        "dist": true // set this to false to include "dist" folder in search results
    },
    // Turn off tsc task auto detection since we have the necessary tasks as npm scripts
    "typescript.tsc.autoDetect": "off",
    "workbench.colorCustomizations": {
        "editor.lineHighlightBackground": "#1073cf2d",
        "editor.lineHighlightBorder": "#9fced11f",
        "activityBar.activeBackground": "#3399ff",
        "activityBar.background": "#3399ff",
        "activityBar.foreground": "#15202b",
        "activityBar.inactiveForeground": "#15202b99",
        "activityBarBadge.background": "#bf0060",
        "activityBarBadge.foreground": "#e7e7e7",
        "commandCenter.border": "#e7e7e799",
        "sash.hoverBorder": "#3399ff",
        "statusBar.background": "#007fff",
        "statusBar.foreground": "#e7e7e7",
        "statusBarItem.hoverBackground": "#3399ff",
        "statusBarItem.remoteBackground": "#007fff",
        "statusBarItem.remoteForeground": "#e7e7e7",
        "titleBar.activeBackground": "#007fff",
        "titleBar.activeForeground": "#e7e7e7",
        "titleBar.inactiveBackground": "#007fff99",
        "titleBar.inactiveForeground": "#e7e7e799"
    },
    "github-actions.workflows.pinned.workflows": [
        ".github/workflows/release.yml"
    ],
    "i18n-ally.localesPaths": [
        "locales"
    ],
    "i18n-ally.keystyle": "nested",
    "variable-print.userCustomPrintStatements": {
        

        "rust": "println!(\"row: $row - col: $col $v -> {:?}\", &$v);",
        "javascript|typescript": "console.log(\"row: $row - col: $col $v -> \"+ $v);",
    },
    "variable-print.customPrintStatements": {


        "rust": "println!(\"row: $row - col: $col $v -> {}\", &$v);",
        "go": "fmt.Printf(\"row: $row - col: $col $v -> %#v\",$v)",
        "h|c|cpp": "printf(\"row: $row - col: $col $v -> %s\\n\", $v);",
        "javascript|typescript": "console.log($v);",
        "python": "print(f\"row: $row - col: $col $v -> {$v}\")",
        "java": "System.out.println($v);",
        "ruby": "puts \"row: $row - col: $col $v -> #{$v}\"",
        "php": "var_dump($v);",
        "lua": "print(\"row: $row - col: $col $v ->(\",type($v),\")\",$v)",
        "kotlin": "println(\"row: $row - col: $col $v -> \"+$v)",
        "csharp": "Console.WriteLine(\"row: $row - col: $col $v -> {0}\", $v);",
        "swift": "print(\"row: $row - col: $col $v -> \\($v)\")",
        "dart": "print(\"row: $row - col: $col $$v -> $v ${$$v.runtimeType}\");",
        "perl": "say \"row: $row - col: $col $v -> $$v\";",
        "julia": "println(\"row: $row - col: $col $v ->\", $v)",
        "haskell": "putStrLn(\"row: $row - col: $col $v ->\" ++ $v)",
        "zig": "std.debug.print(\"row: $row - col: $col $v -> {}\", .{$v});",
        "v": "print($v)"
    },
    "files.autoSave": "onFocusChange",
    "peacock.color": "#007fff"
}